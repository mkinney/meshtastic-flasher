name: Make Release
on: workflow_dispatch

jobs:
  release_create:
    runs-on: ubuntu-latest

    outputs:
      version: 1.0.0
      upload_url: ${{ steps.create_release.outputs.upload_url }}

    steps:

    - name: Checkout
      uses: actions/checkout@v2

    - name: Create GitHub release
      uses: actions/create-release@v1
      id: create_release
      with:
        draft: true
        prerelease: true
        release_name: Meshtastic Flasher App 1.0.0
        tag_name: 1.0.0
        body: |
          Autogenerated by github action, developer should edit as required before publishing...
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


  build-and-publish-mac:
    runs-on: macos-latest
    needs: release_create
    steps:

      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17

      - name: Setup code signing
        env:
          MACOS_CERTIFICATE: ${{ secrets.MACOS_CERTIFICATE }}
          MACOS_CERTIFICATE_PWD: ${{ secrets.MACOS_CERTIFICATE_PWD }}
          MACOS_KEYCHAIN_PASSWORD: ${{ secrets.MACOS_KEYCHAIN_PASSWORD }}
        run: |
          echo $MACOS_CERTIFICATE | base64 --decode > certificate.p12
          security create-keychain -p "$MACOS_KEYCHAIN_PASSWORD" meshtastic.keychain
          security default-keychain -s meshtastic.keychain
          security unlock-keychain -p "$MACOS_KEYCHAIN_PASSWORD" meshtastic.keychain
          security import certificate.p12 -k meshtastic.keychain -P "$MACOS_CERTIFICATE_PWD" -T /usr/bin/codesign
          security set-key-partition-list -S apple-tool:,apple:,codesign: -s -k "$MACOS_KEYCHAIN_PASSWORD" meshtastic.keychain

        # TODO: sign
      - name: Build
        env:
          MACOS_SIGNING_IDENTITY: ${{ secrets.MACOS_SIGNING_IDENTITY }}
        run: |
          go build -o bin/meshtastic-cli main.go

      - name: Add mac to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release_create.outputs.upload_url }}
          asset_path: bin/meshtastic-cli
          asset_name: meshtastic-flasher-mac
          asset_content_type: application/zip


  build-and-publish-windows:
    runs-on: windows-latest
    needs: release_create
    steps:

      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17

      - name: Build
        run: |
          go build -o bin/meshtastic-cli main.go

      - name: Add windows to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release_create.outputs.upload_url }}
          asset_path: bin/meshtastic-cli
          asset_name: meshtastic-flasher-windows
          asset_content_type: application/zip
